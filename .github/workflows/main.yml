name: CI/CD Pipeline

on:
  push:
    branches: [ develop, prod ]
  pull_request:
    branches: [ develop, prod ]

env:
  NODE_VERSION: '18'
  POSTGRES_DB: codelearning_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/codelearning_test
  DB_USER: postgres
  DB_HOST: localhost
  DB_NAME: codelearning_test
  DB_PASSWORD: postgres
  DB_PORT: 5432
  JWT_SECRET: test-secret
  REDIS_URL: redis://localhost:6379
  NODE_ENV: test

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: codelearning_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        run: |
          PGPASSWORD=${{ env.POSTGRES_PASSWORD }} psql -h localhost -U postgres -c "SELECT 'Database connection successful' AS connection_test;"
          npm run test:setup
        env:
          PGPASSWORD: postgres

      - name: Run tests and generate coverage
        run: npm test -- --coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest

    if: ${{ success() }}

    steps:
    - uses: actions/checkout@v4

    - name: Merge develop into prod
      run: |
        git checkout origin/prod
        git merge develop
        git push origin prod
