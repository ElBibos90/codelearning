name: Node.js CI

on:
  push:
    branches: [ main, master ]  # aggiunto master per supportare entrambe le convenzioni
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: codelearning_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup test database
      run: |
        npm run test:setup
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/codelearning_test
        
    - name: Run tests
      run: npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/codelearning_test
        JWT_SECRET: test-secret
        REDIS_URL: redis://localhost:6379
        NODE_ENV: test
        
    - name: Generate coverage report
      run: npm run test:coverage

    - name: Upload coverage reports
      if: success()
      uses: codecov/codecov-action@v3